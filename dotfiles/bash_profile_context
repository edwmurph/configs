#!/bin/bash

# Automatically switch to node version specified in local dir's package.json (don't do this when in node_modules)
function autoswitch_to_node_version() {
  if [ -f '.nvmrc' ]; then
    requested_node_version="v$(cat .nvmrc)"
    current_node_version="$(nvm current)"
    if [ "$requested_node_version" != "$current_node_version" ]; then
      # printf "requested_node_version: $requested_node_version\ncurrent_node_version: $current_node_version\n"
      nvm use
    fi
  # elif [ -f 'package.json' ] && [[ "$PWD" != *'node_modules'* ]]; then
  #   requested_node_version="v$(node -p "(require('./package.json').engines || {}).node || ''")"
  #   if [ $requested_node_version == 'v' ]; then
  #     # local package.json does not have an engines.node value
  #     return 0;
  #   fi
  #   current_node_version="$(nvm current)"
  #   if [ "$requested_node_version" != "$current_node_version" ]; then
  #     # printf "requested_node_version: $requested_node_version\ncurrent_node_version: $current_node_version\n"
  #     nvm use
  #   fi
  fi
}

function context_switch() {
  autoswitch_to_node_version
  context=$(echo $PWD | sed -E 's/^\/Users\/emurphy\/code\/([^/]+).*$/\1/')
  if ! [[ $context =~ / ]]; then
    AWS_PROFILE=$context
  fi
}


cd () { builtin cd "$@" && context_switch; }
pushd () { builtin pushd "$@" && context_switch; }
popd () { builtin popd "$@" && context_switch; }
cd .
